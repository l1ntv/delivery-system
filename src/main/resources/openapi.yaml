openapi: 3.0.2
info:
  title: Delivery system API
  version: 1.0.0
  description: REST API для системы доставки

tags:
  - name: Client
  - name: Courier
  - name: Order

paths:
  /clients:
    post:
      tags:
        - Client
      summary: Создание клиента
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '201':
          description: Успешное создание клиента
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '409':
          description: Логин уже занят
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    get:
      tags:
        - Client
      summary: Получение всех клиентов
      responses:
        '200':
          description: Успешный вывод всех клиентов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'

  /clients/{id}:
    get:
      tags:
        - Client
      summary: Получение клиента по id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Уникальный идентификатор клиента
      responses:
        '200':
          description: Успешный вывод клиента по id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '404':
          description: Клиент не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /couriers:
    post:
      tags:
        - Courier
      summary: Создание курьера
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '201':
          description: Успешное создание курьера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '409':
          description: Логин уже занят
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    get:
      tags:
        - Courier
      summary: Получение всех курьеров
      responses:
        '200':
          description: Успешный вывод всех курьеров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'

  /orders:
    post:
      tags:
        - Order
      summary: Создание заказа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '201':
          description: Успешное создание заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    get:
      tags:
        - Order
      summary: Получение всех заказов
      responses:
        '200':
          description: Успешный вывод всех заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'

  /orders/courier/{courierId}:
    post:
      tags:
        - Order
      summary: Получение заказов курьера
      parameters:
        - name: courierId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Уникальный идентификатор курьера
      responses:
        '200':
          description: Успешный вывод всех заказов курьера
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Курьер не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /orders/{id}/assign:
    put:
      tags:
        - Order
      summary: Подписание заказа курьеру
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Уникальный идентификатор заказа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courierId:
                  type: integer
                  format: int64
                  description: Уникальный идентификатор курьера
              required:
                - courierId
      responses:
        '200':
          description: Успешное подписание заказа курьеру
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '409':
          description: Количество заказов курьера >= 3 / Заказ уже принадлежит какому-то курьеру
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Курьер не найден / Заказ не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /orders/{id}/status:
    put:
      tags:
        - Order
      summary: Обновление статуса заказа
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Уникальный идентификатор заказа
      responses:
        '200':
          description: Успешное обновление статуса заказа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
        '404':
          description: Заказ не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '400':
          description: Неверные входные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

components:
  schemas:
    UserRole:
      type: string
      enum:
        - CLIENT
        - COURIER
      description: Роль пользователя

    OrderStatus:
      type: string
      enum:
        - CREATED
        - IN_PROGRESS
        - DELIVERED
      description: Статусы заказов

    UserDTO:
      type: object
      properties:
        login:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
      required:
        - login
        - role
      example:
        login: "login"
        role: "CLIENT"

    OrderDTO:
      type: object
      properties:
        description:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        street:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
      required:
        - description
        - status
        - street
        - city
        - postalCode
        - country
      example:
        description: "Some description"
        status: "CREATED"
        street: "Street"
        city: "City"
        postalCode: "postalCode"
        country: "Country"